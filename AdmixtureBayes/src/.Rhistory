updateR()
help(rbeta)
muT=c(3,3)
muN=c(0,0)
b1=5.744
b2=2.749
xmat=matrix(0,nrow=200,ncol=2)
for(i in 1:30){
xmat[i,]=muN+rnorm(2)
}
for(i in 31:200){
alpha=rbeta(1,b1,b2)
xmat[i,]=muN*(1-alpha)+muT*alpha+rnorm(2)
}
df=data.frame(xmat)
colnames(df)<- c('x1','x2')
df$z=c(rep('N',30),rep('T',170))
View(df)
install.packages(ggplot2)
install.packages('ggplot2')
ggplot(df, aes(x1,x2))+geom_point()
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point()
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=z))
b1=5.744
muT=c(6,6)
muN=c(0,0)
b1=5.744
b2=2.749
xmat=matrix(0,nrow=200,ncol=2)
for(i in 1:30){
xmat[i,]=muN+rnorm(2)
}
for(i in 31:200){
alpha=rbeta(1,b1,b2)
xmat[i,]=muN*(1-alpha)+muT*alpha+rnorm(2)
}
df=data.frame(xmat)
colnames(df)<- c('x1','x2')
df$z=c(rep('N',30),rep('T',170))
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=z))
muT=c(10,10)
muN=c(0,0)
b1=5.744
b2=2.749
xmat=matrix(0,nrow=200,ncol=2)
for(i in 1:30){
xmat[i,]=muN+rnorm(2)
}
for(i in 31:200){
alpha=rbeta(1,b1,b2)
xmat[i,]=muN*(1-alpha)+muT*alpha+rnorm(2)
}
df=data.frame(xmat)
colnames(df)<- c('x1','x2')
df$z=c(rep('N',30),rep('T',170))
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=z))
muT=c(10,10)
muN=c(0,0)
b1=5.744
b2=2.749
xmat=matrix(0,nrow=200,ncol=2)
for(i in 1:30){
xmat[i,]=muN+rnorm(2)
}
for(i in 31:200){
alpha=rbeta(1,b1,b2)
xmat[i,]=muN*(1-alpha)+muT*alpha+rnorm(2)
}
df=data.frame(xmat)
colnames(df)<- c('x1','x2')
df$type=c(rep('N',30),rep('T',170))
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=z))
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=type))
ggplot(df, aes(x1,x2))+geom_point(aes(colour=type))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=type))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
pdf('tumor_normal_distinction.pdf')
getwd()
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=type))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
muT=c(10,10)
muN=c(0,0)
b1=5.744
b2=2.749
xmat=matrix(0,nrow=200,ncol=2)
for(i in 1:30){
xmat[i,]=muN+rnorm(2)
}
for(i in 31:200){
alpha=rbeta(1,b1,b2)
xmat[i,]=muN*(1-alpha)+muT*alpha+rnorm(2)
}
df=data.frame(xmat)
colnames(df)<- c('x1','x2')
df$type=c(rep('N',30),rep('T',170))
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=type))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
pdf('tumor_normal_distinction.pdf')
xmat[i,]=muN*(1-alpha)+muT*alpha+rnorm(2)
muT=c(10,10)
muN=c(0,0)
b1=5.744
b2=2.749
xmat=matrix(0,nrow=200,ncol=2)
for(i in 1:30){
xmat[i,]=muN+rnorm(2)
}
for(i in 31:200){
alpha=rbeta(1,b1,b2)
xmat[i,]=muN*(1-alpha)+muT*alpha+rnorm(2)
}
df=data.frame(xmat)
colnames(df)<- c('x1','x2')
df$type=c(rep('N',30),rep('T',170))
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=type))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggsave(filename='tumor_normal_model.pdf')
library(ggplot2)
ggplot(df, aes(x1,x2))+geom_point(aes(colour=type))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggsave(filename='tumor_normal_model.png')
setwd("~/AdmixtureBayes/AdmixtureBayes/src")
getwd()
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src")
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
library(admixturegraph)
install.packages('admixturegraph')
library(admixturegraph)
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
library(admixturegraph)
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
library(admixturegraph)
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
library(admixturegraph)
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
inner_nodes
leaves
edges
help("read.csv")
leaves.t=read.csv(leaves.f, header=F)
leaves=as.character(leaves.t$V1)
leaves
inner_nodes.t=read.csv(inner_nodes.f, header=F)
inner_nodes=c(as.character(inner_nodes.t$V1),'r')
inner_nodes
edges.t=apply(read.csv(edges.f,header=F),c(1,2),as.character)
vector_of_edges=c()
for(i in 1:nrow(edges.t)){
vector_of_edges=c(vector_of_edges, edge(edges.t[i,1],edges.t[i,2]))
}
edges=parent_edges(vector_of_edges)
edges.t
edges
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
library(admixturegraph)
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
admixture_events.t
commandArgs <- function() c('tmp.png', 'leaves.csv','inner_nodes.csv','edges.csv','adm_props.csv')
library(admixturegraph)
source("/Users/svendvn/AdmixtureBayes/AdmixtureBayes/src/make_drawing.R")
